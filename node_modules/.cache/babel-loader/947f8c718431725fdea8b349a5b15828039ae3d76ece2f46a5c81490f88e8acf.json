{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2417696\\\\OneDrive - Cognizant\\\\Documents\\\\vscode\\\\VibeCoding2025\\\\new-consultingo\\\\consultingo\\\\src\\\\components\\\\TranslationTest.js\",\n  _s = $RefreshSig$();\n// Simple translation test to debug the issue\nimport React, { useState } from 'react';\nimport { translateToJargon, translateToPlain } from '../services/translationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function testTranslation() {\n  try {\n    console.log('Testing translation service...');\n\n    // Test simple translation\n    const plainText = 'I need to finish this project';\n    console.log('Input:', plainText);\n    const jargonResult = await translateToJargon(plainText);\n    console.log('Jargon result:', jargonResult);\n    const plainResult = await translateToPlain('We need to leverage synergy to optimize deliverables');\n    console.log('Plain result:', plainResult);\n  } catch (error) {\n    console.error('Test failed:', error);\n  }\n}\n\n// Auto-run test when component mounts\nexport default function TranslationTest() {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [results, setResults] = useState([]);\n  const runTest = async () => {\n    setIsRunning(true);\n    try {\n      const plainText = 'I need to finish this project';\n      const result1 = await translateToJargon(plainText);\n      const jargonText = 'We need to leverage synergy to optimize deliverables';\n      const result2 = await translateToPlain(jargonText);\n      setResults([{\n        input: plainText,\n        output: result1,\n        type: 'to-jargon'\n      }, {\n        input: jargonText,\n        output: result2,\n        type: 'to-plain'\n      }]);\n    } catch (error) {\n      setResults([{\n        error: error.message\n      }]);\n    }\n    setIsRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-white mb-4\",\n      children: \"Translation Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runTest,\n      disabled: isRunning,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n      children: isRunning ? 'Testing...' : 'Run Translation Test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/10 p-4 rounded\",\n        children: result.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-400\",\n          children: [\"Error: \", result.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white/70\",\n            children: [\"Input (\", result.type, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white mb-2\",\n            children: result.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white/70\",\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: result.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TranslationTest, \"x6t1mw5fiK9QBOxaSl6eH8oH4rc=\");\n_c = TranslationTest;\nvar _c;\n$RefreshReg$(_c, \"TranslationTest\");","map":{"version":3,"names":["React","useState","translateToJargon","translateToPlain","jsxDEV","_jsxDEV","Fragment","_Fragment","testTranslation","console","log","plainText","jargonResult","plainResult","error","TranslationTest","_s","isRunning","setIsRunning","results","setResults","runTest","result1","jargonText","result2","input","output","type","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","result","index","_c","$RefreshReg$"],"sources":["C:/Users/2417696/OneDrive - Cognizant/Documents/vscode/VibeCoding2025/new-consultingo/consultingo/src/components/TranslationTest.js"],"sourcesContent":["// Simple translation test to debug the issue\r\nimport React, { useState } from 'react';\r\nimport { translateToJargon, translateToPlain } from '../services/translationService';\r\n\r\nasync function testTranslation() {\r\n  try {\r\n    console.log('Testing translation service...');\r\n    \r\n    // Test simple translation\r\n    const plainText = 'I need to finish this project';\r\n    console.log('Input:', plainText);\r\n    \r\n    const jargonResult = await translateToJargon(plainText);\r\n    console.log('Jargon result:', jargonResult);\r\n    \r\n    const plainResult = await translateToPlain('We need to leverage synergy to optimize deliverables');\r\n    console.log('Plain result:', plainResult);\r\n    \r\n  } catch (error) {\r\n    console.error('Test failed:', error);\r\n  }\r\n}\r\n\r\n// Auto-run test when component mounts\r\nexport default function TranslationTest() {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n\r\n  const runTest = async () => {\r\n    setIsRunning(true);\r\n    try {\r\n      const plainText = 'I need to finish this project';\r\n      const result1 = await translateToJargon(plainText);\r\n      \r\n      const jargonText = 'We need to leverage synergy to optimize deliverables';\r\n      const result2 = await translateToPlain(jargonText);\r\n      \r\n      setResults([\r\n        { input: plainText, output: result1, type: 'to-jargon' },\r\n        { input: jargonText, output: result2, type: 'to-plain' }\r\n      ]);\r\n    } catch (error) {\r\n      setResults([{ error: error.message }]);\r\n    }\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6\">\r\n      <h2 className=\"text-2xl font-bold text-white mb-4\">Translation Test</h2>\r\n      <button \r\n        onClick={runTest}\r\n        disabled={isRunning}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\"\r\n      >\r\n        {isRunning ? 'Testing...' : 'Run Translation Test'}\r\n      </button>\r\n      \r\n      <div className=\"space-y-4\">\r\n        {results.map((result, index) => (\r\n          <div key={index} className=\"bg-white/10 p-4 rounded\">\r\n            {result.error ? (\r\n              <div className=\"text-red-400\">Error: {result.error}</div>\r\n            ) : (\r\n              <>\r\n                <div className=\"text-white/70\">Input ({result.type}):</div>\r\n                <div className=\"text-white mb-2\">{result.input}</div>\r\n                <div className=\"text-white/70\">Output:</div>\r\n                <div className=\"text-green-400\">{result.output}</div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErF,eAAeC,eAAeA,CAAA,EAAG;EAC/B,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;;IAE7C;IACA,MAAMC,SAAS,GAAG,+BAA+B;IACjDF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,SAAS,CAAC;IAEhC,MAAMC,YAAY,GAAG,MAAMV,iBAAiB,CAACS,SAAS,CAAC;IACvDF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,YAAY,CAAC;IAE3C,MAAMC,WAAW,GAAG,MAAMV,gBAAgB,CAAC,sDAAsD,CAAC;IAClGM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,WAAW,CAAC;EAE3C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACtC;AACF;;AAEA;AACA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMoB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1BH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMP,SAAS,GAAG,+BAA+B;MACjD,MAAMW,OAAO,GAAG,MAAMpB,iBAAiB,CAACS,SAAS,CAAC;MAElD,MAAMY,UAAU,GAAG,sDAAsD;MACzE,MAAMC,OAAO,GAAG,MAAMrB,gBAAgB,CAACoB,UAAU,CAAC;MAElDH,UAAU,CAAC,CACT;QAAEK,KAAK,EAAEd,SAAS;QAAEe,MAAM,EAAEJ,OAAO;QAAEK,IAAI,EAAE;MAAY,CAAC,EACxD;QAAEF,KAAK,EAAEF,UAAU;QAAEG,MAAM,EAAEF,OAAO;QAAEG,IAAI,EAAE;MAAW,CAAC,CACzD,CAAC;IACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdM,UAAU,CAAC,CAAC;QAAEN,KAAK,EAAEA,KAAK,CAACc;MAAQ,CAAC,CAAC,CAAC;IACxC;IACAV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEb,OAAA;IAAKwB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCzB,OAAA;MAAIwB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxE7B,OAAA;MACE8B,OAAO,EAAEd,OAAQ;MACjBe,QAAQ,EAAEnB,SAAU;MACpBY,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAExDb,SAAS,GAAG,YAAY,GAAG;IAAsB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAET7B,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBX,OAAO,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBlC,OAAA;QAAiBwB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EACjDQ,MAAM,CAACxB,KAAK,gBACXT,OAAA;UAAKwB,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,SAAO,EAACQ,MAAM,CAACxB,KAAK;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAEzD7B,OAAA,CAAAE,SAAA;UAAAuB,QAAA,gBACEzB,OAAA;YAAKwB,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,SAAO,EAACQ,MAAM,CAACX,IAAI,EAAC,IAAE;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3D7B,OAAA;YAAKwB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEQ,MAAM,CAACb;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrD7B,OAAA;YAAKwB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5C7B,OAAA;YAAKwB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAEQ,MAAM,CAACZ;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACrD;MACH,GAVOK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CApDuBD,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}