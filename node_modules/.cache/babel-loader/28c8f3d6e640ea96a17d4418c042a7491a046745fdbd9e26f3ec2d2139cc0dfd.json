{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2417696\\\\OneDrive - Cognizant\\\\Documents\\\\vscode\\\\VibeCoding2025\\\\consultingo\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: {\n    score: 0,\n    totalQuestions: 0,\n    streak: 0,\n    level: 1,\n    experience: 0,\n    achievements: []\n  },\n  flashcards: {\n    currentIndex: 0,\n    mastered: []\n  },\n  bingo: {\n    board: [],\n    selected: [],\n    wins: 0\n  },\n  dailyChallenge: {\n    date: new Date().toDateString(),\n    completed: false,\n    streak: 0\n  },\n  theme: 'dark',\n  soundEnabled: true\n};\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_QUIZ_SCORE':\n      const newScore = state.user.score + (action.payload.correct ? 1 : 0);\n      const newTotal = state.user.totalQuestions + 1;\n      const newStreak = action.payload.correct ? state.user.streak + 1 : 0;\n      const newExperience = state.user.experience + (action.payload.correct ? 10 : 5);\n      const newLevel = Math.floor(newExperience / 100) + 1;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          score: newScore,\n          totalQuestions: newTotal,\n          streak: newStreak,\n          experience: newExperience,\n          level: newLevel\n        }\n      };\n    case 'UPDATE_FLASHCARD_INDEX':\n      return {\n        ...state,\n        flashcards: {\n          ...state.flashcards,\n          currentIndex: action.payload\n        }\n      };\n    case 'MASTER_FLASHCARD':\n      return {\n        ...state,\n        flashcards: {\n          ...state.flashcards,\n          mastered: [...state.flashcards.mastered, action.payload]\n        }\n      };\n    case 'UPDATE_BINGO_BOARD':\n      return {\n        ...state,\n        bingo: {\n          ...state.bingo,\n          board: action.payload\n        }\n      };\n    case 'SELECT_BINGO_CELL':\n      const newSelected = state.bingo.selected.includes(action.payload) ? state.bingo.selected.filter(id => id !== action.payload) : [...state.bingo.selected, action.payload];\n      return {\n        ...state,\n        bingo: {\n          ...state.bingo,\n          selected: newSelected\n        }\n      };\n    case 'BINGO_WIN':\n      return {\n        ...state,\n        bingo: {\n          ...state.bingo,\n          wins: state.bingo.wins + 1\n        },\n        user: {\n          ...state.user,\n          experience: state.user.experience + 50\n        }\n      };\n    case 'COMPLETE_DAILY_CHALLENGE':\n      const today = new Date().toDateString();\n      const challengeStreak = state.dailyChallenge.date === today ? state.dailyChallenge.streak : state.dailyChallenge.streak + 1;\n      return {\n        ...state,\n        dailyChallenge: {\n          date: today,\n          completed: true,\n          streak: challengeStreak\n        },\n        user: {\n          ...state.user,\n          experience: state.user.experience + 25\n        }\n      };\n    case 'ADD_ACHIEVEMENT':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          achievements: [...state.user.achievements, action.payload]\n        }\n      };\n    case 'TOGGLE_SOUND':\n      return {\n        ...state,\n        soundEnabled: !state.soundEnabled\n      };\n    case 'RESET_PROGRESS':\n      return initialState;\n    default:\n      return state;\n  }\n}\nexport function AppProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Save state to localStorage whenever state changes\n  useEffect(() => {\n    try {\n      localStorage.setItem('consultingo-state', JSON.stringify(state));\n    } catch (error) {\n      console.error('Failed to save state to localStorage:', error);\n    }\n  }, [state]);\n\n  // Check for achievements\n  useEffect(() => {\n    const checkAchievements = () => {\n      const {\n        user\n      } = state;\n      const newAchievements = [];\n\n      // First correct answer\n      if (user.score === 1 && !user.achievements.includes('first-correct')) {\n        newAchievements.push('first-correct');\n      }\n\n      // Perfect streak of 5\n      if (user.streak === 5 && !user.achievements.includes('streak-5')) {\n        newAchievements.push('streak-5');\n      }\n\n      // Perfect streak of 10\n      if (user.streak === 10 && !user.achievements.includes('streak-10')) {\n        newAchievements.push('streak-10');\n      }\n\n      // Level up achievements\n      if (user.level >= 5 && !user.achievements.includes('level-5')) {\n        newAchievements.push('level-5');\n      }\n\n      // Bingo master\n      if (state.bingo.wins >= 3 && !user.achievements.includes('bingo-master')) {\n        newAchievements.push('bingo-master');\n      }\n      newAchievements.forEach(achievement => {\n        dispatch({\n          type: 'ADD_ACHIEVEMENT',\n          payload: achievement\n        });\n      });\n    };\n    checkAchievements();\n  }, [state.user.score, state.user.streak, state.user.level, state.bingo.wins]);\n  const value = {\n    state,\n    dispatch,\n    updateQuizScore: correct => dispatch({\n      type: 'UPDATE_QUIZ_SCORE',\n      payload: {\n        correct\n      }\n    }),\n    updateFlashcardIndex: index => dispatch({\n      type: 'UPDATE_FLASHCARD_INDEX',\n      payload: index\n    }),\n    masterFlashcard: id => dispatch({\n      type: 'MASTER_FLASHCARD',\n      payload: id\n    }),\n    updateBingoBoard: board => dispatch({\n      type: 'UPDATE_BINGO_BOARD',\n      payload: board\n    }),\n    selectBingoCell: id => dispatch({\n      type: 'SELECT_BINGO_CELL',\n      payload: id\n    }),\n    bingoWin: () => dispatch({\n      type: 'BINGO_WIN'\n    }),\n    completeDailyChallenge: () => dispatch({\n      type: 'COMPLETE_DAILY_CHALLENGE'\n    }),\n    toggleSound: () => dispatch({\n      type: 'TOGGLE_SOUND'\n    }),\n    resetProgress: () => dispatch({\n      type: 'RESET_PROGRESS'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(AppProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AppProvider;\nexport function useApp() {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AppContext","initialState","user","score","totalQuestions","streak","level","experience","achievements","flashcards","currentIndex","mastered","bingo","board","selected","wins","dailyChallenge","date","Date","toDateString","completed","theme","soundEnabled","appReducer","state","action","type","newScore","payload","correct","newTotal","newStreak","newExperience","newLevel","Math","floor","newSelected","includes","filter","id","today","challengeStreak","AppProvider","children","_s","dispatch","localStorage","setItem","JSON","stringify","error","console","checkAchievements","newAchievements","push","forEach","achievement","value","updateQuizScore","updateFlashcardIndex","index","masterFlashcard","updateBingoBoard","selectBingoCell","bingoWin","completeDailyChallenge","toggleSound","resetProgress","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/2417696/OneDrive - Cognizant/Documents/vscode/VibeCoding2025/consultingo/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nconst initialState = {\r\n  user: {\r\n    score: 0,\r\n    totalQuestions: 0,\r\n    streak: 0,\r\n    level: 1,\r\n    experience: 0,\r\n    achievements: [],\r\n  },\r\n  flashcards: {\r\n    currentIndex: 0,\r\n    mastered: [],\r\n  },\r\n  bingo: {\r\n    board: [],\r\n    selected: [],\r\n    wins: 0,\r\n  },\r\n  dailyChallenge: {\r\n    date: new Date().toDateString(),\r\n    completed: false,\r\n    streak: 0,\r\n  },\r\n  theme: 'dark',\r\n  soundEnabled: true,\r\n};\r\n\r\nfunction appReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'UPDATE_QUIZ_SCORE':\r\n      const newScore = state.user.score + (action.payload.correct ? 1 : 0);\r\n      const newTotal = state.user.totalQuestions + 1;\r\n      const newStreak = action.payload.correct ? state.user.streak + 1 : 0;\r\n      const newExperience = state.user.experience + (action.payload.correct ? 10 : 5);\r\n      const newLevel = Math.floor(newExperience / 100) + 1;\r\n      \r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          score: newScore,\r\n          totalQuestions: newTotal,\r\n          streak: newStreak,\r\n          experience: newExperience,\r\n          level: newLevel,\r\n        },\r\n      };\r\n\r\n    case 'UPDATE_FLASHCARD_INDEX':\r\n      return {\r\n        ...state,\r\n        flashcards: {\r\n          ...state.flashcards,\r\n          currentIndex: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'MASTER_FLASHCARD':\r\n      return {\r\n        ...state,\r\n        flashcards: {\r\n          ...state.flashcards,\r\n          mastered: [...state.flashcards.mastered, action.payload],\r\n        },\r\n      };\r\n\r\n    case 'UPDATE_BINGO_BOARD':\r\n      return {\r\n        ...state,\r\n        bingo: {\r\n          ...state.bingo,\r\n          board: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'SELECT_BINGO_CELL':\r\n      const newSelected = state.bingo.selected.includes(action.payload)\r\n        ? state.bingo.selected.filter(id => id !== action.payload)\r\n        : [...state.bingo.selected, action.payload];\r\n      \r\n      return {\r\n        ...state,\r\n        bingo: {\r\n          ...state.bingo,\r\n          selected: newSelected,\r\n        },\r\n      };\r\n\r\n    case 'BINGO_WIN':\r\n      return {\r\n        ...state,\r\n        bingo: {\r\n          ...state.bingo,\r\n          wins: state.bingo.wins + 1,\r\n        },\r\n        user: {\r\n          ...state.user,\r\n          experience: state.user.experience + 50,\r\n        },\r\n      };\r\n\r\n    case 'COMPLETE_DAILY_CHALLENGE':\r\n      const today = new Date().toDateString();\r\n      const challengeStreak = state.dailyChallenge.date === today \r\n        ? state.dailyChallenge.streak \r\n        : state.dailyChallenge.streak + 1;\r\n      \r\n      return {\r\n        ...state,\r\n        dailyChallenge: {\r\n          date: today,\r\n          completed: true,\r\n          streak: challengeStreak,\r\n        },\r\n        user: {\r\n          ...state.user,\r\n          experience: state.user.experience + 25,\r\n        },\r\n      };\r\n\r\n    case 'ADD_ACHIEVEMENT':\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          achievements: [...state.user.achievements, action.payload],\r\n        },\r\n      };\r\n\r\n    case 'TOGGLE_SOUND':\r\n      return {\r\n        ...state,\r\n        soundEnabled: !state.soundEnabled,\r\n      };\r\n\r\n    case 'RESET_PROGRESS':\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function AppProvider({ children }) {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  // Save state to localStorage whenever state changes\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('consultingo-state', JSON.stringify(state));\r\n    } catch (error) {\r\n      console.error('Failed to save state to localStorage:', error);\r\n    }\r\n  }, [state]);\r\n\r\n  // Check for achievements\r\n  useEffect(() => {\r\n    const checkAchievements = () => {\r\n      const { user } = state;\r\n      const newAchievements = [];\r\n\r\n      // First correct answer\r\n      if (user.score === 1 && !user.achievements.includes('first-correct')) {\r\n        newAchievements.push('first-correct');\r\n      }\r\n\r\n      // Perfect streak of 5\r\n      if (user.streak === 5 && !user.achievements.includes('streak-5')) {\r\n        newAchievements.push('streak-5');\r\n      }\r\n\r\n      // Perfect streak of 10\r\n      if (user.streak === 10 && !user.achievements.includes('streak-10')) {\r\n        newAchievements.push('streak-10');\r\n      }\r\n\r\n      // Level up achievements\r\n      if (user.level >= 5 && !user.achievements.includes('level-5')) {\r\n        newAchievements.push('level-5');\r\n      }\r\n\r\n      // Bingo master\r\n      if (state.bingo.wins >= 3 && !user.achievements.includes('bingo-master')) {\r\n        newAchievements.push('bingo-master');\r\n      }\r\n\r\n      newAchievements.forEach(achievement => {\r\n        dispatch({ type: 'ADD_ACHIEVEMENT', payload: achievement });\r\n      });\r\n    };\r\n\r\n    checkAchievements();\r\n  }, [state.user.score, state.user.streak, state.user.level, state.bingo.wins]);\r\n\r\n  const value = {\r\n    state,\r\n    dispatch,\r\n    updateQuizScore: (correct) => dispatch({ type: 'UPDATE_QUIZ_SCORE', payload: { correct } }),\r\n    updateFlashcardIndex: (index) => dispatch({ type: 'UPDATE_FLASHCARD_INDEX', payload: index }),\r\n    masterFlashcard: (id) => dispatch({ type: 'MASTER_FLASHCARD', payload: id }),\r\n    updateBingoBoard: (board) => dispatch({ type: 'UPDATE_BINGO_BOARD', payload: board }),\r\n    selectBingoCell: (id) => dispatch({ type: 'SELECT_BINGO_CELL', payload: id }),\r\n    bingoWin: () => dispatch({ type: 'BINGO_WIN' }),\r\n    completeDailyChallenge: () => dispatch({ type: 'COMPLETE_DAILY_CHALLENGE' }),\r\n    toggleSound: () => dispatch({ type: 'TOGGLE_SOUND' }),\r\n    resetProgress: () => dispatch({ type: 'RESET_PROGRESS' }),\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useApp() {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}